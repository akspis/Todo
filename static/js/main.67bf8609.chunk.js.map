{"version":3,"sources":["List.jsx","App.js","reportWebVitals.js","index.js"],"names":["List","props","className","itemList","map","itemobj","item","id","onClick","key","newList","filter","setItemList","deleteItem","App","useState","currentItem","setCurrentItem","type","placeholder","value","onChange","e","target","alert","preventDefault","Date","now","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPA0BeA,MAtBd,SAAcC,GAQX,OACI,qBAAKC,UAAW,OAAhB,SAEKD,EAAME,SAASC,KAAI,SAAAC,GAEhB,OAAO,8BACP,8BAAuBA,EAAQC,KAC/B,wBAAQC,GAAG,MAAMC,QAAS,kBAbrB,SAACC,GACb,IAAMC,EAAQT,EAAME,SAASQ,QAAO,SAAAN,GAClC,OAAOA,EAAQI,MAAQA,KAE1BR,EAAMW,YAAYF,GASoBG,CAAWR,EAAQI,MAAjD,oBADA,MAASJ,EAAQI,aCqBlBK,MAlCf,WACC,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOZ,EAAP,KAAiBS,EAAjB,KAeC,OACE,sBAAKV,UAAU,MAAf,UACD,sBAAKA,UAAU,aAAf,UACE,2CACA,4DACA,uBAAOgB,KAAK,OAAOC,YAAY,aAC/BC,MAAOJ,EAAaK,SAAU,SAACC,GAAD,OAAML,EAAeK,EAAEC,OAAOH,UAC5D,wBAAQZ,QApBG,SAACc,GACK,KAAhBN,EACDQ,MAAM,wBAERF,EAAEG,iBACFb,EAAY,GAAD,mBAAKT,GAAL,CAAe,CAACG,KAAKU,EAAcP,IAAKiB,KAAKC,UACxDV,EAAe,MAcb,iBACA,cAAC,EAAD,CAAMd,SAAUA,EAAUS,YAAaA,OAGvC,qBAAKV,UAAU,MAAf,SAAqB,wBAAQM,QAfhB,WACdI,EAAY,KAcU,6BCrBXgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.67bf8609.chunk.js","sourcesContent":["import React from 'react';\r\nimport './List.css';\r\n\r\n\r\n function List(props) {\r\n\r\n    const deleteItem=(key)=>{\r\n         const newList=props.itemList.filter(itemobj =>{\r\n           return itemobj.key !== key;\r\n        });\r\n        props.setItemList(newList)\r\n    }\r\n    return (\r\n        <div className =\"list\">\r\n           \r\n            {props.itemList.map(itemobj=>{\r\n                \r\n                return <div>\r\n                <p key ={itemobj.key}>{itemobj.item}\r\n                <button id='btn' onClick={()=>deleteItem(itemobj.key)}>Delete</button> </p>\r\n                </div>\r\n            })}\r\n           \r\n        </div>\r\n    )\r\n}\r\nexport default List;","import React,{useState} from 'react'\nimport './App.css';\nimport List from './List';\n\n\nfunction App() {\n const [currentItem, setCurrentItem] = useState('')\n const [itemList, setItemList] = useState([])\n\n const addItem =(e)=>{\n   if(currentItem === '') { \n     alert(\"Add somting to list\") }\n   else{\n   e.preventDefault()\n   setItemList([...itemList, {item:currentItem , key: Date.now()}]);\n   setCurrentItem('');\n }}\n\n const deleteAll =() =>{\n    setItemList([]);\n }\n\n  return (\n    <div className=\"App\">\n   <div className=\"to-do-form\">\n     <h3>TODO-LIST</h3>\n     <p>What's Your Schedule Today.</p>\n     <input type=\"text\" placeholder='Enter List'\n     value={currentItem} onChange={(e)=> setCurrentItem(e.target.value)}/>\n     <button onClick={addItem}>Add</button>\n     <List itemList={itemList} setItemList={setItemList}/>\n     \n     </div>\n     <div className='del'><button onClick={deleteAll}>Clear All</button></div>\n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}